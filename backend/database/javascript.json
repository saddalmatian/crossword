{
    "javascript": "What client-side scripting language is widely used for web development?",
    "ecmaScript": "What is the standardized specification that defines the JavaScript programming language?",
    "variables": "What are used to store data values in JavaScript? (Declare using 'let', 'const', or 'var')",
    "datatypes": "What are the primitive data types in JavaScript? (e.g., string, number, boolean, null, undefined, symbol)",
    "operators": "What are symbols used to perform operations on values and variables in JavaScript? (e.g., arithmetic, comparison, logical, assignment)",
    "conditionals": "What statements are used to execute different blocks of code based on different conditions in JavaScript? (e.g., 'if', 'else if', 'else')",
    "loops": "What statements are used to repeat a block of code multiple times in JavaScript? (e.g., 'for', 'while', 'do...while')",
    "functions": "What are blocks of code designed to perform specific tasks in JavaScript?",
    "arrays": "What data structure is used to store ordered collections of items in JavaScript?",
    "objects": "What data structure is used to store collections of key-value pairs in JavaScript?",
    "domelements": "What can be accessed and manipulated using JavaScript within a webpage? (e.g., elements, attributes, content)",
    "events": "What are actions or occurrences that happen in the browser that web pages can respond to? (e.g., click, mouseover, submit)",
    "eventlisteners": "What allows you to listen for and respond to events in JavaScript?",
    "json": "What lightweight data-interchange format is commonly used for data transmission on the web?",
    "ajax": "What technique allows web pages to update content asynchronously without reloading the entire page?",
    "fetch": "What modern JavaScript API is used to make network requests?",
    "promises": "What objects represent the eventual outcome of an asynchronous operation in JavaScript?",
    "asyncawait": "What keywords are used to work with Promises in a more synchronous-looking way in JavaScript?",
    "closures": "What allows a function to access variables from its outer function scope, even after the outer function has returned?",
    "prototypes": "What mechanism allows JavaScript objects to inherit properties and methods from other objects?",
    "thiskeyword": "What keyword in JavaScript refers to the object it belongs to, which can vary depending on the context?",
    "hoisting": "What behavior in JavaScript moves variable and function declarations to the top of their scope before execution?",
    "strictmode": "What mode in JavaScript enforces stricter parsing and error handling rules?",
    "es6features": "What are some new features introduced in ECMAScript 2015 (ES6)? (e.g., arrow functions, classes, template literals, destructuring)",
    "errorhandling": "How do you handle runtime errors in JavaScript? (e.g., using 'try...catch' blocks)",
    "debugging": "What techniques and tools are used to identify and fix errors in JavaScript code?",
    "webapis": "What are interfaces provided by web browsers that allow you to access and interact with various browser features? (e.g., DOM, Geolocation, Local Storage)",
    "libraries": "What are collections of pre-written JavaScript code that provide reusable functionality? (e.g., React, Vue.js, Angular)",
    "frameworks": "What provide a structured way to build complex web applications, often using a component-based architecture?"
}